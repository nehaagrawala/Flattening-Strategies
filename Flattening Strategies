Subscribing to an observable is just like adding a new addEventListener,
if you’re not careful you might cause memory leaks or run into weird bugs.
That’s why we need to make a decision of when we should subscribe or unsubscribe from the mapped (inner) observable.
Let’s do a short recap of what we have so far —
We return an Observable from a map function.
We “flatten” this Observable (subscribe to it)
Now we need to decide Which strategy we are going to use.

There are 4 “Flattening Strategies”
“Merge” Strategy — deciding not to do anything, basically, we just keep subscribing to every new observable that we return from the map.
“Switch” Strategy — unsubscribing from the last mapped observable, when the new one arrives.
“Concat” Strategy —Queuing up every new Observable, and subscribing to a new observable only when the last observable completed.
“Exhaust” strategy — the “don’t interrupt me” strategy, ignores (and never subscribe to) any new mapped Observable while the current Observable is still emitting values.




